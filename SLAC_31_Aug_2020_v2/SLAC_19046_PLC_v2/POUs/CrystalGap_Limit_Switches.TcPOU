<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="CrystalGap_Limit_Switches" Id="{de65f84b-133f-43c8-bdf2-651bd5836144}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM CrystalGap_Limit_Switches

VAR
	
    axisGAP: AXIS_REF;
    fbAxisPowerGAP: MC_Power;
       
	bEnable: BOOL := TRUE;
    fOverride: LREAL := 100;
    		
	biLimFwd_CrysGap AT %I*: BOOL;
	biLimBwd_CrysGap AT %I*: BOOL;
	
	fbtestGAP:FB_TEST;
	
	ftLimFwd :F_TRIG; //detect falling edge on the limit switch
	
	ftLimBwd :F_TRIG;
	
	rActPosLimFwd:LREAL; //save the actual motor position
	rActPosLimBwd:LREAL;
	
	rSetPosLimFwd:LREAL; //save the set motor position
	rSetPosLimBwd:LREAL;

// Stuff for testing cage deflection 			

	biLimFwd_AirPitch AT %I*: BOOL;
	biLimBwd_AirPitch AT %I*: BOOL;
	
	ftLimFwd_AirPitch :F_TRIG; //detect falling edge on the limit switch
	ftLimBwd_AirPitch :F_TRIG;
	
	rActPosLimFwd_AirPitch:LREAL; //save the actual motor position
	rActPosLimBwd_AirPitch:LREAL;
	
	rSetPosLimFwd_AirPitch:LREAL; //save the set motor position
	rSetPosLimBwd_AirPitch:LREAL;
		
	fbtest: FB_TEST;
	
	I_moter_Gap AT %I*: UINT;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
fbtest(
	axis:=axisGAP , 
	fTargetVelocity:=0.02 , 
	fStartPosition:= 1,//0.05, 
	fEndPosition:= 8.65, 
	nDivisions:= 20 , 
	fbAxisPower:= fbAxisPowerGAP );


fbAxisPowerGAP(
    Axis:= axisGAP,
    Enable:= bEnable,
    Enable_Positive:= biLimFwd_CrysGap, //biLimFwd_CrysGap, //  // biLimFwd_CrysGap, // TRUE, //
    Enable_Negative:= biLimBwd_CrysGap, // TRUE, //
    Override:= fOverride,
    BufferMode:= ,
    Options:= ,
    Status=> ,
    Busy=> ,
    Active=> ,
    Error=> ,
    ErrorID=> );
	
	
//fbtestGAP(axis := axisGAP, fbAxisPower:=fbAxisPowerGAP);

ftLimFWd(CLK:= biLimFwd_CrysGap);
ftLimBwd(CLK:= biLimBwd_CrysGap);


IF (ftLimFwd.Q) THEN
	rActPosLimFwd := axisGAP.NcToPlc.ActPos ;
	rSetPosLimFwd := axisGap.NcToPlc.SetPos;
END_IF

IF (ftLimBwd.Q) THEN
	rActPosLimBwd := axisGAP.NcToPlc.ActPos ;
	rSetPosLimBwd := axisGap.NcToPlc.SetPos;
END_IF



// Stuff for testing cage deflection 	

ftLimFwd_AirPitch(CLK:= biLimFwd_AirPitch);
ftLimBwd_AirPitch(CLK:= biLimBwd_AirPitch);

IF (ftLimFwd_AirPitch.Q) THEN
	rActPosLimFwd_AirPitch := axisGAP.NcToPlc.ActPos ;
	rSetPosLimFwd_AirPitch := axisGap.NcToPlc.SetPos;
END_IF

IF (ftLimBwd_AirPitch.Q) THEN
	rActPosLimBwd_AirPitch := axisGAP.NcToPlc.ActPos ;
	rSetPosLimBwd_AirPitch := axisGap.NcToPlc.SetPos;
END_IF

]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>